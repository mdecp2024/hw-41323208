<h1>about</h1>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Department of Mechanical Design Engineering, National Huwei University of Science and Technology</span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">National Taiwan University</span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Department of Mechanical Design Engineering</span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">cp2024 computer program</span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Course materials:</span></span></span></span></p>
<p style="padding-left: 30px;"><a href="https://blog.jupyter.org/introducing-learn-python-with-jupyter-11214f152159"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Learn Python using Jupyter</span></span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> ( </span></span></span></span><a href="https://www.learnpythonwithjupyter.com/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">website</span></span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> , </span></span></span></span><a href="https://localhost:9445/downloads/learn_python_with_jupyter.pdf"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">e-book</span></span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> )</span></span></span></span></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Education version account microsoftonline login point:  </span></span></span></span><a href="https://login.microsoftonline.com/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://login.microsoftonline.com/</span></span></span></span></a></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Team online teaching:</span></span></span></span></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"></span></span></span><a href="https://login.microsoftonline.com/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Log in to https://login.microsoftonline.com/</span></span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> Office 365 </span></span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">with "student ID@nfu.edu.tw"</span></span></span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"></span></span></span></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Teams team code: fpqabi8</span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Personal Ethereum: </span></span></span></span><a href="https://github.com/mdecp2024/hw-41323208"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://github.com/mdecp2024/hw-41323208</span></span></span></span></a></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Personal website: </span></span></span></span><a href="https://mdecp2024.github.io/hw-41323208"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://mdecp2024.github.io/hw-41323208</span></span></span></span></a></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Additional information:</span></span></span></span></p>
<p style="padding-left: 30px;"><a href="/downloads/cd2023_pj3ag4_zmq_football_4.7.7z"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">cd2023_pj3ag4_zmq_football_4.7.7z</span></span></span></span></a></p>
<p style="padding-left: 30px;"><a href="https://localhost:9446/downloads/cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z</span></span></span></span></a></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Website password: admin</span></span></span></span></p>
<h1>Attendance</h1>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Number of attendees (10%) – self-evidence scoring</span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Use Github to submit submission records for scoring.</span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"></span></span></span></span></p>
<p><strong><span style="vertical-align: inherit; color: #000000;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"></span></span></span></span></strong></p>
<h1>HW 1</h1>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Topic: Browser-based decentralized version management and integrated solution development environment (10%)</span></span></span></span><span style="background-color: #ffff99;"><br/></span></h4>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">USB flash drive:</span></span></span></span></p>
<p style="padding-left: 60px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Download </span></span></span></span><a href="http://229.cycu.org/python_2025_lite.7z"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">python_2025_lite.7z</span></span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> (428 MB, about 1.5 GB after unzipping)</span></span></span></span></p>
<p style="padding-left: 30px;"><a href="https://mde.tw/cp2024/content/Jupyter.html"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Jupiter</span></span></span></span></a></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">What are Github and Codespace?</span></span></span></span></p>
<p style="padding-left: 60px;"><a href="https://docs.github.com/en/get-started/start-your-journey/hello-world"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Hello World - GitHub Documentation</span></span></span></span></a></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Use a string containing your student ID as an account to apply for free use of Github.</span></span></span></span></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Python course materials: </span></span></span></span><a href="https://www.learnpythonwithjupyter.com/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://www.learnpythonwithjupyter.com/</span></span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> - PART 1</span></span></span></span></p>
<hr/>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Part 1: Establish basic knowledge and organize information (10%)</span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">After starting the portable program system, in the command line:</span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">y:\&gt;cd notebook</span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">y:\notebook&gt;jupyter lab --collaborative</span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Enter </span></span></span></span><a href="/downloads/01_string_input_print.ipynb"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">01_string_input_print.ipynb</span></span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> to practice how to modify the PART1 notebook and save it. After uploading it to the download directory in the homework document, embed the </span></span></span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">submitted </span></span></span><a href="/downloads/01_string_input_print.ipynb"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">01_string_input_print.ipynb into the following web page through </span></span></span></a></span><a href="https://nbviewer.org/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://nbviewer.org/</span></span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> .</span></span></span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"></span></span></span><a href="/downloads/01_string_input_print.ipynb"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"></span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"></span></span></span></p>
<p><iframe height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb" width="600"></iframe></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">The html syntax of the iframe annotation listed above:</span></span></span></span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">&lt;iframe width="600" height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb"&gt;&lt;/iframe&gt;</span></span></span></span></pre>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">After completing the above process, enter the HW1 self-evaluation score into the cp2024 self-evaluation form.</span></span></span></span></p>
<h2>Hardware 1 exam</h2>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Practice good procedures in groups of six</span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Through the excellent webpage of Jupyterlab, each group is assigned to write programming exercises related to topic 1 in turn, and edit the webpage content (localhost and Codespaces environment).</span></span></span></span></p>
<h3>w7</h3>
<p><a href="https://youtu.be/hoAvAYwxQdU">https://youtu.be/hoAvAYwxQdU</a></p>
<p><a href="https://youtu.be/hoAvAYwxQdU"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/hoAvAYwxQdU" width="560"></iframe><br/></a></p>
<h3>w10</h3>
<h4><span>題目一</span></h4>
<p><span><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="//www.youtube.com/embed/99JOYb2_EjI" width="560"></iframe></span></p>
<h4>題目二</h4>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/o-zJPkBL4zw" width="560"></iframe></p>
<h4>題目三</h4>
<p><span>心得：覺得Python不僅可以繪製矩形 還能用Python解決物理和數學題目 期待之後能學到如何用Python製作小遊戲</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/2Gkv3VTn57E" width="560"></iframe></p>
<h1>HW 2</h1>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Topic: Python’s sequence, judgmental expressions and repeated loops (20%)</span></span></span></span><span style="background-color: #ffff99;"><br/></span></h4>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Python course materials: </span></span></span></span><a href="https://www.learnpythonwithjupyter.com/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://www.learnpythonwithjupyter.com/</span></span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> - PART 2 and Part 3</span></span></span></span></p>
<hr/>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Manila HW 1 web page data collection and program practice methods, organize the following (20%):</span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Part 2: Introduction to lists and if/else statements</span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Part 3: Introduction to for loops</span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">After completing the above process, enter the HW2 self-evaluation score into the cp2024 self-evaluation form.</span></span></span></span></p>
<h2>Hardware 2 exam</h2>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Practice good procedures in groups of six</span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Through Jupyterlab's excellent web pages, each group is assigned to take turns to write HW 2-related program exercises and edit web content (localhost and Codespaces environments).</span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"></span></span></span></span></p>
<h2>三角形示範程式</h2>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def draw_triangle():
    height = 5  # 三角形高度
    for i in range(height):
        spaces = ' ' * (height - i - 1)  # 计算空格数
        stars = '*' * (2 * i + 1)        # 计算星号数
        print(spaces + stars)

draw_triangle()
</pre>
<p></p>
<h2><span>可攜程式操作</span></h2>
<p></p>
<p>操作步驟:</p>
<ol>
<li>下載 <a href="http://229.cycu.org/python_2025_lite.7z">python_2025_lite.7z</a> (可攜程式環境)</li>
<li>下載<span> </span><a href="https://mde.tw/cp2024/downloads/zmq_remote_api_ex_cube_triangle.7z">zmq_remote_api_ex_cube_triangle.7z</a> (利用 Python 控制模擬場景中的物件)</li>
<li>進入可攜程式環境中 data/CoppeliaSim 目錄, 開啟 coppeliaSim.exe (機電整合模擬程式,<span> </span><a href="https://github.com/CoppeliaRobotics">原始碼</a>)</li>
<li>啟動可攜程式環境, 雙點擊 start_ipv6.bat, 系統會啟動四個命令列, 兩個 SciTE 編輯器</li>
<li>執行場景控制程式前, 先處理操作系統的防火牆, 將下列指令存為 .bat 檔案後, 以管理員身分執行, 以便開啟 23000-23050 埠號進出:</li>
<li>netsh advfirewall firewall add rule name="allow_23000-23050" dir=in action=allow protocol=TCP localport=23000-23050<br/>netsh advfirewall firewall add rule name="allow_23000-23050" dir=out action=allow protocol=TCP localport=23000-23050</li>
<li>開啟 CoppeliaSim 中的視覺串流伺服器: Modules - Connectivity - Visualization stream</li>
<li>利用 SciTE 開啟 put_cubes_into_scene_1.py, 利用 Tools - Go 執行操控程式</li>
<li>使用者可以透過瀏覽器, 以模擬場景所在電腦的 IP, 且埠號為 23020 觀看模擬場景</li>
</ol>
<hr/>
<p><a href="https://mde.tw/cp2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/eb2e4327b65a0fe5c307ea329ef2f69c/raw/18b3cdd1f9bbef6ff913cc88293a8ebb7e028520/1a_w3_site_repo_brython.py">1a site and re</a></p>
<p></p>
<h2>w11_hw</h2>
<p>心得：chatGPT很好的幫我解決了python程式上不理解的問題 還用python繪製圖案</p>
<p><a href="https://mdecp2024.github.io/hw-41323208/content/Brython.html?src=https://gist.githubusercontent.com/41323208/610125c7ac0abea409dd668f78c45aba/raw/6879c82aae05c13ecec22176e32dd3c7a00045bb/hw11_2.py">题目一</a></p>
<p><a href="https://mdecp2024.github.io/hw-41323208/content/Brython.html?src=https://gist.githubusercontent.com/41323208/610125c7ac0abea409dd668f78c45aba/raw/61b4a6dcd59c36289d1756f7ab2b0b52b337d360/hw11_2.py">题目二</a></p>
<p style="text-align: center;">-----------------------------------------------------------------------------------------------------------------</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def print_filled_circle(radius, center_x, center_y, size=10):
    for y in range(size):
        for x in range(size):
            # 計算 (x, y) 點到圓心的距離
            distance = (x - center_x) ** 2 + (y - center_y) ** 2
            # 如果距離小於或等於半徑的平方，則是圓內的點，打印 *
            if distance &lt;= radius ** 2:
                print('*', end='')
            else:
                print(' ', end='')
        print()

# 設定圓心在 (4, 4)，半徑為 4
print_filled_circle(radius=4, center_x=4, center_y=4)</pre>
<p>-----------------------------------------------------------------------------------------------------------------</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import html
from browser import document as doc

# 创建画布
canvas = html.CANVAS(width=400, height=400)
brython_div = doc["brython_div1"]
brython_div &lt;= canvas

# 每个方块的大小
gs = 20

# 获取画布的 2D 上下文
ctx = canvas.getContext("2d")

# 绘制带白色边框的矩形（黑色填充）
def dRect(lux, luy, w, h, fill_color='#000000', border_color='#ffffff', border_width=2):
    # 先填充黑色
    ctx.fillStyle = fill_color
    ctx.fillRect(lux, luy, w, h)
    
    # 再绘制白色边框
    ctx.lineWidth = border_width
    ctx.strokeStyle = border_color
    ctx.strokeRect(lux, luy, w, h)

# 绘制由黑色方块和白色边框拼成的圆形图案
def drawCircleWithBlackSquaresAndWhiteBorders(radius):
    # 画布的中心点
    cx, cy = canvas.width // 2, canvas.height // 2
    # 计算网格数
    for i in range(-radius, radius, gs):
        for j in range(-radius, radius, gs):
            # 当前网格的中心坐标
            x = cx + i
            y = cy + j
            # 计算该网格到中心的距离
            dist = (i ** 2 + j ** 2) ** 0.5
            # 如果该网格的距离小于圆的半径，填充方块并绘制边框
            if dist &lt; radius:
                dRect(x, y, gs, gs, fill_color="black", border_color="white", border_width=1)  # 黑色填充，白色边框

# 绘制由黑色方块和白色边框填充的圆形
drawCircleWithBlackSquaresAndWhiteBorders(100)</pre>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/m01Zu-SoXIA" width="560"></iframe></p>
<h2>w12</h2>
<p><a href="https://mdecp2024.github.io/hw-41323208/content/Brython.html?src=https://gist.githubusercontent.com/41323208/610125c7ac0abea409dd668f78c45aba/raw/7c4b655c80766bc735a043b58cb78ef240e5adb2/wk12.1.py">题目一</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">n = 11
space = '_'
center = n//2
#print(center)

for y in range(n):
  for x in range(n):
    print("(", x, ",", y, ")")</pre>
<p><a href="https://mdecp2024.github.io/hw-41323208/content/Brython.html?src=https://gist.githubusercontent.com/41323208/610125c7ac0abea409dd668f78c45aba/raw/8d128048bf921a226c252c13b7f8ea9275e5468b/hw12.2.py">题目二</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import html
from browser import document as doc

#利用 html 建立 canvas 超文件物件
canvas = html.CANVAS(width = 400, height = 400)
brython_div = doc["brython_div1"]
brython_div &lt;= canvas

#每一格的 pixel数
gs = 20

#gste canvas width and height
ctx = canvas.getContext("2d")

width = 11
height = 11

'''
ctx.lineWidth = 1
ctx.strokeStyle = 'lightgrey'
ctx.beginPath()
#ctx.rect(i*gs, j"gs, gs, gs)
ctx.rect(0, 0, 150, 100)
ctx.stroke()
'''

for i in range(width):
    for j in range(height):
        ctx.lineWidth = 1
        ctx.strokeStyle = 'lightgrey'
        ctx.beginPath();
        ctx.rect(i*gs, j*gs, gs, gs)
        ctx.stroke();
#dRect(igs.jgs, gs, gs. 1, lightgrey")
</pre>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"></span></span></span></span></p>
<h2><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">w12_hw</span></span></span></span></h2>
<p><span style="color: #ff0000;"><strong>第一題——input() and print()</strong></span></p>
<p>程式一：<a href="https://mdecp2024.github.io/hw-41323208/content/Brython.html?src=https://gist.githubusercontent.com/41323208/610125c7ac0abea409dd668f78c45aba/raw/fde78b9eede5fc2b887158f82502b260763989bb/hw12_1_2.py">輸入姓名</a></p>
<p>程式二：<a href="https://mdecp2024.github.io/hw-41323208/content/Brython.html?src=https://gist.githubusercontent.com/41323208/610125c7ac0abea409dd668f78c45aba/raw/7805e88743707511c2a24de4864add102b64f0c9/hw12_1.py">貓貓</a></p>
<p><span style="color: #ff0000;"><strong>第二題——變數</strong></span></p>
<p>程式一：<a href="https://mdecp2024.github.io/hw-41323208/content/Brython.html?src=https://gist.githubusercontent.com/41323208/610125c7ac0abea409dd668f78c45aba/raw/fde78b9eede5fc2b887158f82502b260763989bb/hw12_2_1.py">姓名</a></p>
<p>程式二：<a href="https://mdecp2024.github.io/hw-41323208/content/Brython.html?src=https://gist.githubusercontent.com/41323208/610125c7ac0abea409dd668f78c45aba/raw/fde78b9eede5fc2b887158f82502b260763989bb/hw12_2_2.py">name and favorite food</a></p>
<p><span style="color: #ff0000;"><strong>第三題——if判斷</strong></span></p>
<p>程式一：<a href="https://mdecp2024.github.io/hw-41323208/content/Brython.html?src=https://gist.githubusercontent.com/41323208/610125c7ac0abea409dd668f78c45aba/raw/fde78b9eede5fc2b887158f82502b260763989bb/hw12_3.py">賣書</a></p>
<p><strong><span style="color: #ff0000;">第四題——append() and remove()</span></strong></p>
<p>程式一：<a href="https://mdecp2024.github.io/hw-41323208/content/Brython.html?src=https://gist.githubusercontent.com/41323208/610125c7ac0abea409dd668f78c45aba/raw/fde78b9eede5fc2b887158f82502b260763989bb/hw12_4.py">購物清單</a></p>
<p><span style="color: #ff0000;"><strong>第五題——<em></em>index().pop and<span> </span>insert()</strong></span></p>
<p>程式一：<a href="https://mdecp2024.github.io/hw-41323208/content/Brython.html?src=https://gist.githubusercontent.com/41323208/610125c7ac0abea409dd668f78c45aba/raw/fde78b9eede5fc2b887158f82502b260763989bb/hw12_5.py">菜單</a></p>
<p><strong><span style="color: #ff0000;">第六題——取其中數</span></strong></p>
<p>程式一：<a href="https://mdecp2024.github.io/hw-41323208/content/Brython.html?src=https://gist.githubusercontent.com/41323208/610125c7ac0abea409dd668f78c45aba/raw/fde78b9eede5fc2b887158f82502b260763989bb/hw12_6.py">Town</a></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"></span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"></span></span></span></span></p>
<h2><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">w13_hw</span></span></span></span></h2>
<p><a href="https://mdecp2024.github.io/hw-41323208/content/Brython.html?src=https://gist.githubusercontent.com/41323208/610125c7ac0abea409dd668f78c45aba/raw/022f8eeb164d315afdff7873319ad4065287d9eb/w13.py">程式一</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import html
from browser import document as doc

# 利用 html 建立 canvas 超文件物件，設定為 400x400 像素
canvas = html.CANVAS(width=400, height=400)  # 增加畫布的大小以顯示第二個方框
brython_div = doc["brython_div1"]
brython_div &lt;= canvas

# 設定 canvas 相關參數
ctx = canvas.getContext("2d")

# 設置最細邊框的寬度
border_width = 1

# 畫第一個紅色邊框
ctx.fillStyle = 'red'
# 上邊框
ctx.fillRect(0, 0, 200, border_width)
# 下邊框
ctx.fillRect(0, 200 - border_width, 200, border_width)
# 左邊框
ctx.fillRect(0, 0, border_width, 200)
# 右邊框
ctx.fillRect(200 - border_width, 0, border_width, 200)

# 畫第一個白色中心方形
ctx.fillStyle = 'white'
ctx.fillRect(border_width, border_width, 200 - 2 * border_width, 200 - 2 * border_width)

# 第二個方框的大小（200x200）
second_border_width = 1
second_width = 200  # 第二個方框的寬度，擴大為 200
second_height = 200  # 第二個方框的高度，擴大為 200

# 計算第二個方框的左上角位置，使其整體位於第一個方框的右下角
second_x = 100  # 第二個方框的 x 坐標，設置為 200
second_y = 100  # 第二個方框的 y 坐標，設置為 200

# 畫第二個紅色邊框
ctx.strokeStyle = 'red'  # 邊框顏色設置為紅色
ctx.lineWidth = second_border_width  # 邊框寬度設置為最細
ctx.strokeRect(second_x, second_y, second_width, second_height)  # 畫紅色邊框

# 填充透明的中心區域（不填充顏色）
ctx.fillStyle = 'transparent'
ctx.fillRect(second_x + second_border_width, second_y + second_border_width, second_width - 2 * second_border_width, second_height - 2 * second_border_width)

# 顯示 canvas
</pre>
<p><a href="https://mdecp2024.github.io/hw-41323208/content/Brython.html?src=https://gist.githubusercontent.com/41323208/610125c7ac0abea409dd668f78c45aba/raw/fcc9adc9d971f5380284e3e46c729687f506e32b/w13_1.py">程式二</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import html
from browser import document as doc

# 利用 html 建立 canvas 超文件物件，設定為 600x600 像素
canvas = html.CANVAS(width=600, height=600)  # 增加畫布的大小
brython_div = doc["brython_div1"]
brython_div &lt;= canvas

# 設定 canvas 相關參數
ctx = canvas.getContext("2d")

# 設置圓形的邊框寬度
circle_border_width = 1

# 先畫圓形1（天晴色圓形）
circle_center_x = 250  # 圓心x坐標（畫布的正中心）
circle_center_y = 250  # 圓心y坐標（畫布的正中心）
circle_radius = 141.4  # 圓的半徑

ctx.beginPath()
ctx.arc(circle_center_x, circle_center_y, circle_radius, 0, 2 * 3.1416)  # 畫圓
ctx.fillStyle = 'skyblue'  # 填充顏色設為天晴色
ctx.fill()  # 填充圓形
ctx.strokeStyle = 'black'  # 邊框顏色設置為黑色
ctx.lineWidth = circle_border_width  # 邊框寬度設置為1
ctx.stroke()  # 畫出圓形的邊框

# 新增第二個圓形（淺綠色圓形）
second_circle_center_x = 350  # 第二個圓形的圓心x坐標
second_circle_center_y = 350  # 第二個圓形的圓心y坐標
second_circle_radius = 141.4  # 第二個圓形的半徑

# 先畫第二個圓形（淺綠色圓形）
ctx.beginPath()
ctx.arc(second_circle_center_x, second_circle_center_y, second_circle_radius, 0, 2 * 3.1416)  # 畫圓
ctx.fillStyle = 'lightgreen'  # 填充顏色設為淺綠色
ctx.fill()  # 填充圓形
ctx.strokeStyle = 'black'  # 邊框顏色設置為黑色
ctx.lineWidth = circle_border_width  # 邊框寬度設置為1
ctx.stroke()  # 畫出圓形的邊框

# 畫第一個紅色方框（內部透明，邊框紅色）
ctx.fillStyle = 'transparent'  # 內部填充為透明
ctx.fillRect(150, 150, 200, 200)  # 填充矩形區域（不會顯示顏色，因為是透明的）
ctx.strokeStyle = 'red'  # 邊框顏色設為紅色
ctx.lineWidth = 1  # 邊框寬度設為1
ctx.strokeRect(150, 150, 200, 200)  # 畫紅色邊框

# 畫第二個紅色方框（內部透明，邊框紅色）
second_x = 250  # 第二個方框的 x 坐標，設置為第一個方框的右下角 x 坐標
second_y = 250  # 第二個方框的 y 坐標，設置為第一個方框的右下角 y 坐標
ctx.fillStyle = 'transparent'  # 內部填充為透明
ctx.fillRect(second_x, second_y, 200, 200)  # 填充矩形區域（不會顯示顏色，因為是透明的）
ctx.strokeStyle = 'red'  # 邊框顏色設為紅色
ctx.lineWidth = 1  # 邊框寬度設為1
ctx.strokeRect(second_x, second_y, 200, 200)  # 畫紅色邊框

# 顯示 canvas</pre>
<p></p>
<h2>w14_hw</h2>
<p>程式：<a href="https://mdecp2024.github.io/hw-41323208/content/Brython.html?src=https://gist.githubusercontent.com/41323208/a60947272b468e7e48b136496bfdbe38/raw/eb05492945220d564e723b7475e0612d0a00a764/w14_hw">三個隨機顏色交疊圓</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import html
from browser import document as doc
import random
import math

# 定義一個函式來初始化畫布
def initialize_canvas(canvas_width=400, canvas_height=400, id="brython_div1"):
    # 創建 canvas 並設置寬度與高度
    canvas = html.CANVAS(width=canvas_width, height=canvas_height)
    brython_div = doc[id]
    brython_div &lt;= canvas
    
    # 獲取 canvas 的 2D 上下文
    ctx = canvas.getContext("2d")
    return canvas, ctx

# 定義一個隨機顏色生成函式
def random_color_generator():
    r = random.randint(0, 255)
    g = random.randint(0, 255)
    b = random.randint(0, 255)
    return f"rgb({r}, {g}, {b})"

# 判斷點 (px, py) 是否在圓內
def is_point_in_circle(px, py, cx, cy, r):
    return (px - cx) ** 2 + (py - cy) ** 2 &lt;= r ** 2

# 使用者設定的圓心座標和半徑，並進行掃描線填充
def draw_circles(x1, y1, r1, x2, y2, r2, x3, y3, r3):
    # 初始化畫布
    canvas, ctx = initialize_canvas(400, 400)
    
    # 清除畫布
    ctx.clearRect(0, 0, canvas.width, canvas.height)
    
    # 顏色區域存儲
    color_dict = {}

    # 使用掃描線方法填充區域
    for py in range(0, canvas.height):
        for px in range(0, canvas.width):
            in_circle1 = is_point_in_circle(px, py, x1, y1, r1)
            in_circle2 = is_point_in_circle(px, py, x2, y2, r2)
            in_circle3 = is_point_in_circle(px, py, x3, y3, r3)

            # 判斷邏輯：決定顏色
            if in_circle1 and in_circle2 and in_circle3:
                # 交集區域（所有圓重疊）
                if "intersection_all" not in color_dict:
                    color_dict["intersection_all"] = random_color_generator()
                current_color = color_dict["intersection_all"]
            elif in_circle1 and in_circle2:
                if "intersection_12" not in color_dict:
                    color_dict["intersection_12"] = random_color_generator()
                current_color = color_dict["intersection_12"]
            elif in_circle1 and in_circle3:
                if "intersection_13" not in color_dict:
                    color_dict["intersection_13"] = random_color_generator()
                current_color = color_dict["intersection_13"]
            elif in_circle2 and in_circle3:
                if "intersection_23" not in color_dict:
                    color_dict["intersection_23"] = random_color_generator()
                current_color = color_dict["intersection_23"]
            elif in_circle1:
                if "circle1" not in color_dict:
                    color_dict["circle1"] = random_color_generator()
                current_color = color_dict["circle1"]
            elif in_circle2:
                if "circle2" not in color_dict:
                    color_dict["circle2"] = random_color_generator()
                current_color = color_dict["circle2"]
            elif in_circle3:
                if "circle3" not in color_dict:
                    color_dict["circle3"] = random_color_generator()
                current_color = color_dict["circle3"]
            else:
                # 點不在任何圓內，畫外區域
                current_color = "white"  # 背景色白色

            # 填充顏色
            ctx.fillStyle = current_color
            ctx.fillRect(px, py, 1, 1)  # 填充一個像素

# 直接設定三個圓的圓心和半徑
x1, y1, r1 = 150, 200, 100  # 圓1：圓心 (150, 200)，半徑 100
x2, y2, r2 = 250, 200, 100  # 圓2：圓心 (250, 200)，半徑 100
x3, y3, r3 = 200, 115, 100   # 圓3：圓心 (200, 150)，半徑 100

# 呼叫畫圓函式
draw_circles(x1, y1, r1, x2, y2, r2, x3, y3, r3)</pre>
<p></p>
<h2>W15</h2>
<p>題目一：<a href="https://mdecp2024.github.io/hw-41323208/content/Brython.html?src=https://gist.githubusercontent.com/41323208/a60947272b468e7e48b136496bfdbe38/raw/1e51336f25ffd6414998d26edddb0ae4db1c7feb/w15_1.py">從 1 累加到 100</a></p>
<p>題目二：<a href="https://mdecp2024.github.io/hw-41323208/content/Brython.html?src=https://gist.githubusercontent.com/41323208/a60947272b468e7e48b136496bfdbe38/raw/d96dea2d1b15604e563854bca7f1ce16fba44af4/w15_2.py">輸入兩個數字計算兩個數字間的所有數字總和</a></p>
<p></p>
<h1>HW 3</h1>
<p></p>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Topic: Numbers, Algorithms and Loops in Python (20%)</span></span></span></span></h4>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Python course materials: </span></span></span></span><a href="https://www.learnpythonwithjupyter.com/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://www.learnpythonwithjupyter.com/</span></span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> - PART 4 and Part 5</span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">After completing the above process, enter the HW3 self-evaluation score into the cp2024 self-evaluation form.</span></span></span></span></p>
<h2>Hardware 3 exam</h2>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Practice good procedures in groups of six</span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Through Jupyterlab's excellent web pages, each group is assigned to take turns to write HW 3-related program exercises and edit web content (localhost and Codespaces environments).</span></span></span></span></p>
<h1>HW 4</h1>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Topic: Using Python to control electromechanical simulation systems (20%)</span></span></span></span></h4>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Use  </span></span></span></span><a href="https://solvespace.com/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://solvespace.com/</span></span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">  to build mechanical system components</span></span></span></span></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Use </span></span></span></span><a href="https://www.coppeliarobotics.com/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">CoppeliaSim</span></span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> to build an electromechanical simulation system</span></span></span></span></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Using </span></span></span></span><a href="https://manual.coppeliarobotics.com/en/zmqRemoteApiOverview.htm"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Python</span></span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> to control the electromechanical analog system on the browser across the network</span></span></span></span></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">example:</span></span></span></span></p>
<p style="padding-left: 60px;"><a href="/downloads/cd2023_pj3ag4_zmq_football_4.7.7z"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">cd2023_pj3ag4_zmq_football_4.7.7z</span></span></span></span></a></p>
<p style="padding-left: 60px;"><a href="https://localhost:9446/downloads/cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z</span></span></span></span></a></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">After completing the above process, enter the HW4 self-evaluation score into the cp2024 self-evaluation form.</span></span></span></span></p>
<h2>Hardware 4 exam</h2>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Practice good procedures in groups of six</span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Through Jupyterlab's excellent web pages, each group is assigned to take turns to write HW 4-related program exercises and edit web content (localhost and Codespaces environments).</span></span></span></span></p>
<h1>final report</h1>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Final dental and written special report (20%)</span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Final oral report video:</span></span></span></span></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">.....</span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Final written special report file (pdf):</span></span></span></span></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">.....</span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Summary of computer-aided design and internship course:</span></span></span></span></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">.....</span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Final self-reported evaluation scores:</span></span></span></span></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">After completing the above process, accept the final report self-evaluation score and enter it into the cp2024 self-evaluation form.</span></span></span></span></p>
<h1>Brython</h1>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>